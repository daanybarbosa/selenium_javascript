{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-23T01:36:54.532Z",
    "end": "2021-11-23T01:37:08.265Z",
    "duration": 13733,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "68bc0a73-8033-45f4-9409-338d5c90a37c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "941fb39c-56e3-4117-93de-cb92441d988b",
          "title": "add todo tests",
          "fullFile": "/Users/daniele/Estudos/webdriverio-selenium-js-workspace/JavaScriptTestAutomationTutorial2021/seleniumDemo/test/firstTest.js",
          "file": "/test/firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 2531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//async function example(){ //no Mocha nao é preciso usar a funçao example() \n        //steps \n        //launch the browser\n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //navigate to our application\n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n        //add a todo\n        //o programa ira procurar o id do campo e ira inserir o dado \n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n        //assert - ira buscar na lista (array) o ultimo item e ira retornar o texto presente nele \n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText()\n            .then(function (value) {\n                return value\n            });\n        // ** assert using node assertion \n        //ira checar duas strings combinam - recebe dois argumentos: 1 - o valor atual, 2 - valor esperado\n        //o valor atual estara armazenado na variavel todoText\n        //o valor esperado sera a variavel que estamos procurando \"Learn Selenium\"\n        //assert.strictEqual(todoText, \"Learn Selenium\")\n        //ira apresentar um erro, pois o valor atual:\"Learn JavaScript\" é diferente do valor esperado: \"Learn Selenium\" \n        //assert.strictEqual(todoText, \"Learn JavaScript\") // Error\n        // ** assert using chai should \n        //ira checar se o valor atual (todoText) é igual ao valor esperado (\"Learn Selenium\") \n        todoText.should.equal(\"Learn Selenium\");\n        //todoText.should.equal(\"Learn JavaScript\"); //Error\n        //close the browser \n        await driver.quit();\n        //Using locators \n        //example(); //no Mocha nao é preciso usar a funçao example()",
              "err": {},
              "uuid": "44483ec1-2c0d-4555-a9b4-f9af7e50aeac",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44483ec1-2c0d-4555-a9b4-f9af7e50aeac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2531,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "9e11f6db-6d8f-4bb6-8ffe-ebef881d79db",
          "title": "add another todo tests",
          "fullFile": "/Users/daniele/Estudos/webdriverio-selenium-js-workspace/JavaScriptTestAutomationTutorial2021/seleniumDemo/test/secondTest.js",
          "file": "/test/secondTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add another todo tests\"",
              "fullTitle": "add another todo tests \"before each\" hook in \"add another todo tests\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "ltCapabilities.capabilities.name = this.currentTest.title; //ira pegar o nome do test\ndriver = new Builder()\n.usingServer(gridUrl)\n.withCapabilities(ltCapabilities.capabilities)\n.build();",
              "err": {},
              "uuid": "22409f76-85a1-478a-9fc0-8fc3f90a4eb9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add another todo tests\"",
              "fullTitle": "add another todo tests \"after each\" hook in \"add another todo tests\"",
              "timedOut": null,
              "duration": 481,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "//close the browser \nawait driver.quit();",
              "err": {},
              "uuid": "febba9f8-8693-49d2-b8ba-dd68fbe3bcda",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successfully adds a another todo to application",
              "fullTitle": "add another todo tests successfully adds a another todo to application",
              "timedOut": null,
              "duration": 6466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//let driver = await new Builder().forBrowser(\"chrome\").build();\n        //navigate to our application\n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n        //add a todo\n        //o programa ira procurar o id do campo e ira inserir o dado \n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n        //assert - ira buscar na lista (array) o ultimo item e ira retornar o texto presente nele \n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText()\n            .then(function (value) {\n                return value\n            });\n        todoText.should.equal(\"Learn Selenium\");\n        //close the browser \n        //await driver.quit();",
              "err": {},
              "uuid": "91d31fad-4245-48f5-a48a-5f15e7fc8f2e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding a new test for reporting",
              "fullTitle": "add another todo tests Adding a new test for reporting",
              "timedOut": null,
              "duration": 5932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//let driver = await new Builder().forBrowser(\"chrome\").build();\n        //navigate to our application\n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n        //add a todo\n        //o programa ira procurar o id do campo e ira inserir o dado \n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn JavaScript\", Key.RETURN);\n        //assert - ira buscar na lista (array) o ultimo item e ira retornar o texto presente nele \n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText()\n            .then(function (value) {\n                return value\n            });\n        todoText.should.equal(\"Learn JavaScript\");\n        //close the browser \n        //await driver.quit();",
              "err": {},
              "uuid": "dbf4a941-e0c1-4f51-84e3-73d6ff78911d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91d31fad-4245-48f5-a48a-5f15e7fc8f2e",
            "dbf4a941-e0c1-4f51-84e3-73d6ff78911d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12398,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/daniele/Estudos/webdriverio-selenium-js-workspace/JavaScriptTestAutomationTutorial2021/seleniumDemo/testReports"
      },
      "version": "6.0.1"
    }
  }
}